# Copyright 2025 Robert Lindley
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# without warranties or conditions of any kind, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

author: Robert Lindley
name: Commit and Push Changes
description: |
  This action automates committing and pushing code changes to a GitHub repository.
  It ensures updates are regularly applied without manual intervention while following security best practices.

branding:
  color: 'blue'
  icon: 'git-commit'

inputs:
  github_token:
    default: ${{ github.token }}
    description:
      GitHub token used for authentication (must have minimal required scopes)
    required: false
  github_hostname:
    default: 'github.com'
    description: GitHub hostname (useful for enterprise installations)
    required: false
  commit_message:
    description: Commit message for the changes
    required: true
  force_push:
    default: 'false'
    description: Whether to force push (true/false)
    required: false
  branch:
    default: ''
    description: Name of the branch to push the code into
    required: false
  directory_path:
    default: '.'
    description: Path to the directory containing files to commit and push
    required: false
  remote_ref:
    default: 'origin'
    description: Remote repository reference
    required: false
  sign_commit:
    default: 'false'
    description: Whether to sign commits using GPG (true/false)
    required: false
  author_name:
    default: 'GitHub Actions'
    description: Name of the commit author
    required: false
  author_email:
    default: 'github-actions@noreply.github.com'
    description: Email of the commit author
    required: false

outputs:
  commit_hash:
    description: The hash of the latest commit
    value: ${{ steps.commit-step.outputs.commit_hash }}

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      id: checkout-repository
      uses: actions/checkout@v4

    - name: Configure Git
      id: configure-git
      shell: bash
      run: |
        git config --global user.name "${{ inputs.commit_author_name }}"
        git config --global user.email "${{ inputs.commit_author_email }}"
        if [ "${{ inputs.sign_commit }}" == "true" ]; then
          git config --global commit.gpgsign true
          git config --global user.signingkey /github/home/.gnupg/private.key
        fi

    - name: Ensure target branch exists
      id: ensure-branch-exists
      shell: bash
      run: |
        git fetch --all
        BRANCH="${{ inputs.target_branch }}"
        if [ -n "$BRANCH" ] && ! git show-ref --verify --quiet refs/heads/$BRANCH; then
          git checkout -b "$BRANCH"
        else
          git checkout "$BRANCH"
        fi

    - name: Stage changes
      id: stage-step
      shell: bash
      run: git add "${{ inputs.directory_path }}"

    - name: Commit changes
      id: commit-step
      shell: bash
      run: |
        if git diff --cached --quiet; then
          echo "No changes to commit."
          exit 0
        fi

        SIGN_OPTION=""
        if [ "${{ inputs.sign_commit }}" == "true" ]; then
          SIGN_OPTION="-S"
        fi

        git commit $SIGN_OPTION -m "${{ inputs.commit_message }}"
        echo "commit_hash=$(git rev-parse HEAD)" >> $GITHUB_ENV

    - name: Push changes
      id: push-step
      shell: bash
      run: |
        FORCE_OPTION=""
        if [ "${{ inputs.force_push }}" == "true" ]; then
          FORCE_OPTION="--force"
        fi

        git push $FORCE_OPTION "${{ inputs.remote_ref }}" HEAD:"${{ inputs.target_branch }}"
        echo "pushed_branch=${{ inputs.target_branch }}" >> $GITHUB_ENV
